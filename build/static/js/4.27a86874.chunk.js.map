{"version":3,"sources":["dashboard/Edit.js","dashboard/UpdateAvail.js","dashboard/ProblemCard.js","dashboard/SearchBar.js","dashboard/Problems.js"],"names":["EditProblem","props","Add","mode","info","dialog","onClick","db","firebase","firestore","UpdateAvail","Tooltip","title","IconButton","available","key_code","now","Date","collection","doc","update","archive_date","then","docRef","catch","error","alert","SetAvail","Archive","Unarchive","ConvertDate","date","seconds","toLocaleDateString","CreateChip","category","color_list","Algebra","Combinatorics","Geometry","Miscellaneous","Chip","className","key","style","backgroundColor","color","label","ProblemCard","useState","linkOn","SetLink","editOn","SetEdit","Card","minWidth","maxWidth","marginTop","id","CardContent","statement","Divider","CardActions","proposer","date_created","edited","algebra","combinatorics","geometry","number_theory","miscellaneous","archive","Edit","copy","FileCopy","difficulty","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","message","SearchBar","field","enableReinitialize","initialValues","name","onSubmit","values","setParams","handleSubmit","TextField","placeholder","value","onChange","handleChange","FormLabel","Select","MenuItem","Button","type","Problems","cards","setCards","params","useEffect","where","orderBy","onSnapshot","querySnapshot","all_cards","all_data","forEach","data","push","i","length","item","toLowerCase","includes","window","MathJax","Hub","Queue","justifyContent","margin","textAlign","display"],"mappings":"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","file":"static/js/4.27a86874.chunk.js","sourcesContent":["import React from \"react\";\nimport AddProblem from \"./Add.js\";\n\nconst EditProblem = (props) => {\n\treturn (\n\t\t<AddProblem mode=\"Edit\" info={props.info} dialog={props.dialog} onClick={props.onClick} />\n\t);\n};\n\nexport default EditProblem;\n","import React from \"react\";\nimport { IconButton, Tooltip } from \"@material-ui/core\";\nimport { Archive, Unarchive } from \"@material-ui/icons\";\nimport firebase from \"../firebase/firebase.js\";\nconst db = firebase.firestore();\n\nconst SetAvail = (available, key_code) => {\n\tvar now = new Date();\n\n\tdb.collection(\"problems\")\n\t\t.doc(key_code)\n\t\t.update({\n\t\t\tavailable: !available,\n\t\t\tarchive_date: now \n\t\t})\n\t\t.then(function (docRef) {\n\t\t\t// alert(\"Document written with ID: \", docRef.id);\n\t\t})\n\t\t.catch(function (error) {\n\t\t\talert(\"Error updating availability: \", error);\n\t\t});\n};\n\nconst UpdateAvail = (props) => {\n\treturn (\n\t\t<Tooltip title={props.mode  ? \"Archive\" : \"Restore\"}>\n\t\t\t<IconButton onClick={() => SetAvail(props.available, props.key_code)}>\n\t\t\t\t{props.mode ? <Archive /> : <Unarchive />}\n\t\t\t</IconButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport default UpdateAvail;\n","import React, { useState } from \"react\";\nimport {\n\tCard,\n\tCardContent,\n\tCardActions,\n\tChip,\n\tDivider,\n\tIconButton,\n\tSnackbar,\n\tTooltip,\n} from \"@material-ui/core\";\nimport copy from \"copy-to-clipboard\";\nimport { FileCopy, Edit } from \"@material-ui/icons\";\nimport EditProblem from \"./Edit.js\";\nimport UpdateAvail from \"./UpdateAvail.js\";\n\nfunction ConvertDate(date) {\n\tvar full_date = new Date(date.seconds * 1000);\n\treturn full_date.toLocaleDateString(\"en-US\");\n}\n\nfunction CreateChip(category, key_code) {\n\tvar color_list = {\n\t\tAlgebra: \"#DB4437\",\n\t\tCombinatorics: \"#F4B400\",\n\t\tGeometry: \"#0F9D58\",\n\t\t\"Number Theory\": \"#4285F4\",\n\t\tMiscellaneous: \"#512da8\",\n\t};\n\treturn (\n\t\t<Chip\n\t\t\tclassName=\"chip\"\n\t\t\tkey={color_list[category] + key_code}\n\t\t\tstyle={{ backgroundColor: color_list[category], color: \"#fff\" }}\n\t\t\tlabel={category}\n\t\t/>\n\t);\n}\n\nconst ProblemCard = (props) => {\n\tconst [linkOn, SetLink] = useState(false);\n\tconst [editOn, SetEdit] = useState(false);\n\tconst handleLink = (statement) => {\n\t\tcopy(statement);\n\t\tSetLink(!linkOn);\n\t};\n\n\treturn (\n\t\t<Card style={{ minWidth: 1000, maxWidth: 1000, marginTop: \"10pt\" }} key={props.id}>\n\t\t\t<CardContent>\n\t\t\t\t<div className=\"problem_statement\">\n\t\t\t\t\t<p>{props.statement}</p>\n\t\t\t\t</div>\n\t\t\t</CardContent>\n\t\t\t<Divider />\n\t\t\t<CardActions>\n\t\t\t\t<div>\n\t\t\t\t\t<table className=\"base_table\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td className=\"left_col\" key=\"left\">\n\t\t\t\t\t\t\t\t\t{props.proposer} on {ConvertDate(props.date_created)}\n\t\t\t\t\t\t\t\t\t{typeof props.edited !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\t\t\", edited on \" + ConvertDate(props.edited)}\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t{props.key_code}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"center_col\" key=\"center\">\n\t\t\t\t\t\t\t\t\t{props.algebra === true &&\n\t\t\t\t\t\t\t\t\t\tCreateChip(\"Algebra\", props.key_code)}\n\t\t\t\t\t\t\t\t\t{props.combinatorics === true &&\n\t\t\t\t\t\t\t\t\t\tCreateChip(\"Combinatorics\", props.key_code)}\n\t\t\t\t\t\t\t\t\t{props.geometry === true &&\n\t\t\t\t\t\t\t\t\t\tCreateChip(\"Geometry\", props.key_code)}\n\t\t\t\t\t\t\t\t\t{props.number_theory === true &&\n\t\t\t\t\t\t\t\t\t\tCreateChip(\"Number Theory\", props.key_code)}\n\t\t\t\t\t\t\t\t\t{props.miscellaneous === true &&\n\t\t\t\t\t\t\t\t\t\tCreateChip(\"Miscellaneous\", props.key_code)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"right_col\" key=\"right\">\n\t\t\t\t\t\t\t\t\t<UpdateAvail\n\t\t\t\t\t\t\t\t\t\tmode={props.archive}\n\t\t\t\t\t\t\t\t\t\tkey_code={props.key_code}\n\t\t\t\t\t\t\t\t\t\tavailable={props.available}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Edit problem\">\n\t\t\t\t\t\t\t\t\t\t<IconButton onClick={() => SetEdit(!editOn)}>\n\t\t\t\t\t\t\t\t\t\t\t<Edit />{\" \"}\n\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Copy source to clipboard\">\n\t\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\thandleLink(\n\t\t\t\t\t\t\t\t\t\t\t\t\tprops.statement +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"\\n% Author: \" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.proposer\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<FileCopy />{\" \"}\n\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\tDifficulty: {props.difficulty}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</CardActions>\n\t\t\t<Snackbar\n\t\t\t\topen={linkOn}\n\t\t\t\tautoHideDuration={2000}\n\t\t\t\tonClose={() => SetLink(!linkOn)}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t}}\n\t\t\t\tmessage=\"Source copied to clipboard!\"\n\t\t\t/>\n\t\t\t<EditProblem dialog={editOn} info={props} onClick={() => SetEdit(!editOn)} />\n\t\t</Card>\n\t);\n};\n\nexport default ProblemCard;\n","import React from \"react\";\nimport { Button, TextField, Select, MenuItem, FormLabel } from \"@material-ui/core\";\nimport { Formik } from \"formik\";\n\nconst SearchBar = (field) => {\n\treturn (\n\t\t<Formik\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={{\n\t\t\t\tdifficulty: \"\",\n\t\t\t\tcategory: \"\",\n\t\t\t\tname: \"\",\n\t\t\t\tstatement: \"\",\n\t\t\t\tid: \"\",\n\t\t\t}}\n\t\t\tonSubmit={(values) => {\n\t\t\t\tfield.setParams(values);\n\t\t\t}}\n\t\t>\n\t\t\t{(props) => (\n\t\t\t\t<form onSubmit={props.handleSubmit}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tplaceholder=\"Proposer\"\n\t\t\t\t\t\tvalue={props.values.name}\n\t\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname=\"statement\"\n\t\t\t\t\t\tid=\"statement\"\n\t\t\t\t\t\tplaceholder=\"Contains text\"\n\t\t\t\t\t\tvalue={props.values.statement}\n\t\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<FormLabel> Difficulty: </FormLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tid=\"difficulty\"\n\t\t\t\t\t\tname=\"difficulty\"\n\t\t\t\t\t\tvalue={props.values.difficulty}\n\t\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value={\"\"}>&nbsp;</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"1\"}>1</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"2\"}>2</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"3\"}>3</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"4\"}>4</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"5\"}>5</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<FormLabel> Category: </FormLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tid=\"category\"\n\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\tvalue={props.values.category}\n\t\t\t\t\t\tonChange={props.handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value={\"\"}>&nbsp;</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"algebra\"}>Algebra</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"combinatorics\"}>Combinatorics</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"geometry\"}>Geometry</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"number_theory\"}>Number Theory</MenuItem>\n\t\t\t\t\t\t<MenuItem value={\"miscellaneous\"}>Miscellaneous</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t\t<Button type=\"submit\">Filter</Button>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\n\nexport default SearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport ProblemCard from \"./ProblemCard.js\";\nimport firebase from \"../firebase/firebase.js\";\nimport { Button } from \"@material-ui/core\";\nimport SearchBar from \"./SearchBar.js\";\nconst db = firebase.firestore();\n\nconst Problems = (props) => {\n    const [cards, setCards] = useState([]);\n    const [params, setParams] = useState({});\n    const get_cards = () => {\n        var query = db\n            .collection(\"problems\")\n            .where(\"available\", \"==\", props.archive)\n            .orderBy(\"date_created\", \"desc\");\n        query.onSnapshot((querySnapshot) => {\n            let all_cards = [];\n            let all_data = [];\n            querySnapshot.forEach((doc) => {\n                var data = doc.data();\n                all_data.push({\n                    id: doc.id,\n                    proposer: data.proposer,\n                    available: data.available,\n                    archive: props.archive,\n                    date_created: data.date_created,\n                    edited: data.edited,\n                    statement: data.statement,\n                    algebra: data.algebra,\n                    combinatorics: data.combinatorics,\n                    geometry: data.geometry,\n                    miscellaneous: data.miscellaneous,\n                    number_theory: data.number_theory,\n                    difficulty: data.difficulty,\n                });\n            });\n            for (var i = 0; i < all_data.length; ++i) {\n                var item = all_data[i];\n                if (typeof params.difficulty !== \"undefined\" && params.difficulty !== \"\") {\n                    if (params.difficulty !== item.difficulty) {\n                        continue;\n                    }\n                }\n                if (typeof params.name !== \"undefined\" && params.name !== \"\") {\n                    if (params.name !== item.proposer) {\n                        if (item.proposer.toLowerCase().includes(params.name.toLowerCase()) === false) {\n                            continue;\n                        }\n                    }\n                }\n                if (typeof params.statement !== \"undefined\" && params.statement !== \"\") {\n                    if (params.statement !== item.statement) {\n                        if (item.statement.toLowerCase().includes(params.statement.toLowerCase()) === false) {\n                            continue;\n                        }\n                    }\n                }\n                if (typeof params.category !== \"undefined\" && params.category !== \"\") {\n                    if (item[params.category] === false) {\n                        continue;\n                    }\n                }\n                all_cards.push(\n                    <ProblemCard\n                        key={item.id}\n                        key_code={item.id}\n                        proposer={item.proposer}\n                        available={item.available}\n                        archive={props.archive}\n                        date_created={item.date_created}\n                        edited={item.edited}\n                        statement={item.statement}\n                        algebra={item.algebra}\n                        combinatorics={item.combinatorics}\n                        geometry={item.geometry}\n                        miscellaneous={item.miscellaneous}\n                        number_theory={item.number_theory}\n                        difficulty={item.difficulty}\n                    />\n                );\n            }\n            setCards(all_cards);\n            window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub]);\n        });\n    };\n\n    useEffect(() => {\n        get_cards();\n    }, [params]);\n\n    return (\n        <div>\n            <div>\n                <div style={{ justifyContent: \"center\", marginTop: \"8pt\" }}>\n                    <div style={{ margin: \"auto\", textAlign: \"center\" }}>\n                        <SearchBar setParams={(values) => setParams(values)} />\n                        {typeof params.difficulty !== \"undefined\" && (\n                            <Button onClick={() => setParams({})}>Clear</Button>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <div\n                style={{\n                    justifyContent: \"center\",\n                    display: \"flex\",\n                    marginTop: \"3vh\",\n                }}\n            >\n                <div style={{ margin: \"auto\" }}>{cards}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Problems;\n"],"sourceRoot":""}