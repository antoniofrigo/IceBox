{"ast":null,"code":"var _jsxFileName = \"/home/antonio/IceBox/src/dashboard/Problems.js\";\nimport React, { Component, useState } from \"react\";\nimport ProblemCard from \"./ProblemCard.js\";\nimport firebase from \"../firebase/firebase.js\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nconst db = firebase.firestore();\n\nconst Problems = props => {\n  const [cards, setCards] = useState([]);\n  var all_cards = [];\n  db.collection(\"problems\").get().then(function (querySnapshot) {\n    querySnapshot.forEach(function (doc) {\n      var data = doc.data();\n      all_cards.push( /*#__PURE__*/React.createElement(ProblemCard, {\n        key_code: doc.id,\n        proposer: data.proposer,\n        available: data.available,\n        date_created: data.date_created,\n        statement: data.statement,\n        category: data.category,\n        difficulty: data.difficulty,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }));\n    });\n    setCards(all_cards, () => window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub]));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      justifyContent: \"center\",\n      display: \"flex\",\n      marginTop: \"5vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, cards));\n};\n\nexport default Problems;","map":{"version":3,"sources":["/home/antonio/IceBox/src/dashboard/Problems.js"],"names":["React","Component","useState","ProblemCard","firebase","Card","CardContent","Typography","db","firestore","Problems","props","cards","setCards","all_cards","collection","get","then","querySnapshot","forEach","doc","data","push","id","proposer","available","date_created","statement","category","difficulty","window","MathJax","Hub","Queue","justifyContent","display","marginTop","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,QAA8C,mBAA9C;AAEA,MAAMC,EAAE,GAAGJ,QAAQ,CAACK,SAAT,EAAX;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIY,SAAS,GAAG,EAAhB;AACAN,EAAAA,EAAE,CAACO,UAAH,CAAc,UAAd,EACKC,GADL,GAEKC,IAFL,CAEU,UAAUC,aAAV,EAAyB;AAC3BA,IAAAA,aAAa,CAACC,OAAd,CAAsB,UAAUC,GAAV,EAAe;AACjC,UAAIC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAX;AACAP,MAAAA,SAAS,CAACQ,IAAV,eACI,oBAAC,WAAD;AACI,QAAA,QAAQ,EAAEF,GAAG,CAACG,EADlB;AAEI,QAAA,QAAQ,EAAEF,IAAI,CAACG,QAFnB;AAGI,QAAA,SAAS,EAAEH,IAAI,CAACI,SAHpB;AAII,QAAA,YAAY,EAAEJ,IAAI,CAACK,YAJvB;AAKI,QAAA,SAAS,EAAEL,IAAI,CAACM,SALpB;AAMI,QAAA,QAAQ,EAAEN,IAAI,CAACO,QANnB;AAOI,QAAA,UAAU,EAAEP,IAAI,CAACQ,UAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWH,KAbD;AAcAhB,IAAAA,QAAQ,CAACC,SAAD,EAAY,MAAMgB,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmBC,KAAnB,CAAyB,CAAC,SAAD,EAAYH,MAAM,CAACC,OAAP,CAAeC,GAA3B,CAAzB,CAAlB,CAAR;AACH,GAlBL;AAoBA,sBACI;AACI,IAAA,KAAK,EAAE;AACHE,MAAAA,cAAc,EAAE,QADb;AAEHC,MAAAA,OAAO,EAAE,MAFN;AAGHC,MAAAA,SAAS,EAAE;AAHR,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCzB,KAAjC,CAPJ,CADJ;AAWH,CAnCD;;AAqCA,eAAeF,QAAf","sourcesContent":["import React, { Component, useState } from \"react\";\nimport ProblemCard from \"./ProblemCard.js\";\nimport firebase from \"../firebase/firebase.js\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\n\nconst db = firebase.firestore();\n\nconst Problems = (props) => {\n    const [cards, setCards] = useState([])\n\n    var all_cards = [];\n    db.collection(\"problems\")\n        .get()\n        .then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n                var data = doc.data();\n                all_cards.push(\n                    <ProblemCard\n                        key_code={doc.id}\n                        proposer={data.proposer}\n                        available={data.available}\n                        date_created={data.date_created}\n                        statement={data.statement}\n                        category={data.category}\n                        difficulty={data.difficulty}\n                    />\n                );\n            });\n            setCards(all_cards, () => window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub]));\n        });\n\n    return (\n        <div\n            style={{\n                justifyContent: \"center\",\n                display: \"flex\",\n                marginTop: \"5vh\",\n            }}\n        >\n            <div style={{ margin: \"auto\" }}>{cards}</div>\n        </div>\n    );\n}\n\nexport default Problems;\n"]},"metadata":{},"sourceType":"module"}