{"ast":null,"code":"var _jsxFileName = \"/home/antonio/IceBox/src/dashboard/Problems.js\";\nimport React, { Component } from \"react\";\nimport ProblemCard from \"./ProblemCard.js\";\nimport firebase from \"../firebase/firebase.js\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nconst db = firebase.firestore();\n\nclass Problems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.generateCards = () => {};\n\n    this.state = {\n      \"cards\": []\n    };\n  }\n\n  componentDidMount() {\n    var all_cards = [];\n    let self = this;\n    db.collection(\"problems\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        all_cards.push( /*#__PURE__*/React.createElement(ProblemCard, {\n          key: doc.id,\n          proposer: data.proposer,\n          date_created: data.date_created,\n          statement: data.statement,\n          category: data.category,\n          diffculty: data.difficulty,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 18\n          }\n        }));\n      });\n      console.log(all_cards);\n      self.setState({\n        \"cards\": all_cards\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"justifyContent\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 10\n      }\n    }, this.state.cards);\n  }\n\n}\n\nexport default Problems;","map":{"version":3,"sources":["/home/antonio/IceBox/src/dashboard/Problems.js"],"names":["React","Component","ProblemCard","firebase","Card","CardContent","Typography","db","firestore","Problems","constructor","props","generateCards","state","componentDidMount","all_cards","self","collection","get","then","querySnapshot","forEach","doc","data","push","id","proposer","date_created","statement","category","difficulty","console","log","setState","render","cards"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,UAA5B,QAA8C,mBAA9C;AAEA,MAAMC,EAAE,GAAGJ,QAAQ,CAACK,SAAT,EAAX;;AACA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAChCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SA2BfC,aA3Be,GA2BC,MAAM,CACrB,CA5Bc;;AAEjB,SAAKC,KAAL,GAAa;AAAC,eAAS;AAAV,KAAb;AACA;;AAEEC,EAAAA,iBAAiB,GAAG;AACnB,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,IAAI,GAAG,IAAX;AACGT,IAAAA,EAAE,CAACU,UAAH,CAAc,UAAd,EAA0BC,GAA1B,GAAgCC,IAAhC,CAAqC,UAASC,aAAT,EAAwB;AACzDA,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAASC,GAAT,EAAc;AAChC,YAAIC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAX;AACAR,QAAAA,SAAS,CAACS,IAAV,eACC,oBAAC,WAAD;AACC,UAAA,GAAG,EAAEF,GAAG,CAACG,EADV;AAEC,UAAA,QAAQ,EAAEF,IAAI,CAACG,QAFhB;AAGC,UAAA,YAAY,EAAEH,IAAI,CAACI,YAHpB;AAIC,UAAA,SAAS,EAAEJ,IAAI,CAACK,SAJjB;AAKC,UAAA,QAAQ,EAAEL,IAAI,CAACM,QALhB;AAMC,UAAA,SAAS,EAAEN,IAAI,CAACO,UANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUH,OAZD;AAaHC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AACAC,MAAAA,IAAI,CAACiB,QAAL,CAAc;AAAC,iBAASlB;AAAV,OAAd;AACA,KAhBD;AAiBH;;AAKDmB,EAAAA,MAAM,GAAG;AACL,wBACC;AAAK,MAAA,KAAK,EAAE;AAAC,0BAAkB;AAAnB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKrB,KAAL,CAAWsB,KADb,CADD;AAKH;;AArC4B;;AAwCjC,eAAe1B,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ProblemCard from \"./ProblemCard.js\";\nimport firebase from \"../firebase/firebase.js\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\n\nconst db = firebase.firestore();\nclass Problems extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\"cards\": []}\n\t}\n\n    componentDidMount() {\n    \tvar all_cards = [];\n    \tlet self = this\n        db.collection(\"problems\").get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n                var data = doc.data()\n                all_cards.push(\n                \t<ProblemCard\n                \t\tkey={doc.id}\n                \t\tproposer={data.proposer}\n                \t\tdate_created={data.date_created}\n                \t\tstatement={data.statement}\n                \t\tcategory={data.category}\n                \t\tdiffculty={data.difficulty}\n                \t/>\n                \t)\n            });\n        \tconsole.log(all_cards)\n        \tself.setState({\"cards\": all_cards})\n        });\n    }\n    \n    generateCards = () => {\n    };\n\n    render() {\n        return (\n        \t<div style={{\"justifyContent\": \"center\"}}>\n        \t\t{this.state.cards}\n        \t</div>\n        \t)\n    }\n}\n\nexport default Problems;\n"]},"metadata":{},"sourceType":"module"}