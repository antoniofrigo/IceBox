{"ast":null,"code":"var _jsxFileName = \"/home/antonio/IceBox/src/App.js\";\nimport React from \"react\";\nimport firebase from \"./firebase/firebase.js\";\nimport Splash from \"./splash/Splash.js\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport \"./css/Splash.css\";\n\nfunction App() {\n  const [isAuth, setAuth] = useState(false);\n  firebase.auth().onAuthStateChanged(function (user) {\n    console.log(user);\n\n    if (user) {\n      setAuth(); // User is signed in.\n\n      var displayName = user.displayName;\n      var email = user.email;\n      var emailVerified = user.emailVerified;\n      var isAnonymous = user.isAnonymous;\n      var uid = user.uid;\n      var providerData = user.providerData; // ...\n    } else {// User is signed out.\n        // ...\n      }\n  });\n\n  const PrivateRoute = ({\n    component: Component,\n    ...rest\n  }) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => fakeAuth.isAuthenticated === true ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n\n  return /*#__PURE__*/React.createElement(Splash, {\n    firebase: firebase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/home/antonio/IceBox/src/App.js"],"names":["React","firebase","Splash","BrowserRouter","Router","Route","Link","Redirect","App","isAuth","setAuth","useState","auth","onAuthStateChanged","user","console","log","displayName","email","emailVerified","isAnonymous","uid","providerData","PrivateRoute","component","Component","rest","props","fakeAuth","isAuthenticated"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,SACIC,aAAa,IAAIC,MADrB,EAEIC,KAFJ,EAGIC,IAHJ,EAIIC,QAJJ,QAKO,kBALP;AAOA,OAAO,kBAAP;;AAEA,SAASC,GAAT,GAAe;AACd,QAAM,CAACC,MAAD,EAASC,OAAT,IAAoBC,QAAQ,CAAC,KAAD,CAAlC;AAEGV,EAAAA,QAAQ,CAACW,IAAT,GAAgBC,kBAAhB,CAAmC,UAAUC,IAAV,EAAgB;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAIA,IAAJ,EAAU;AACTJ,MAAAA,OAAO,GADE,CAEN;;AACA,UAAIO,WAAW,GAAGH,IAAI,CAACG,WAAvB;AACA,UAAIC,KAAK,GAAGJ,IAAI,CAACI,KAAjB;AACA,UAAIC,aAAa,GAAGL,IAAI,CAACK,aAAzB;AACA,UAAIC,WAAW,GAAGN,IAAI,CAACM,WAAvB;AACA,UAAIC,GAAG,GAAGP,IAAI,CAACO,GAAf;AACA,UAAIC,YAAY,GAAGR,IAAI,CAACQ,YAAxB,CARM,CASN;AACH,KAVD,MAUO,CACH;AACA;AACH;AACJ,GAhBD;;AAkBA,QAAMC,YAAY,GAAG,CAAC;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwB,OAAGC;AAA3B,GAAD,kBACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAGC,KAAD,IACvBC,QAAQ,CAACC,eAAT,KAA6B,IAA7B,gBACI,oBAAC,SAAD,oBAAeF,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,gBAEI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;;AAQA,sBAAO,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE1B,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH;;AAED,eAAeO,GAAf","sourcesContent":["import React from \"react\";\nimport firebase from \"./firebase/firebase.js\";\nimport Splash from \"./splash/Splash.js\";\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Redirect,\n} from \"react-router-dom\";\n\nimport \"./css/Splash.css\";\n\nfunction App() {\n\tconst [isAuth, setAuth] = useState(false);\n\n    firebase.auth().onAuthStateChanged(function (user) {\n        console.log(user);\n        if (user) {\n        \tsetAuth()\n            // User is signed in.\n            var displayName = user.displayName;\n            var email = user.email;\n            var emailVerified = user.emailVerified;\n            var isAnonymous = user.isAnonymous;\n            var uid = user.uid;\n            var providerData = user.providerData;\n            // ...\n        } else {\n            // User is signed out.\n            // ...\n        }\n    });\n\n    const PrivateRoute = ({ component: Component, ...rest }) => (\n      <Route {...rest} render={(props) => (\n        fakeAuth.isAuthenticated === true\n          ? <Component {...props} />\n          : <Redirect to='/login' />\n      )} />\n    )\n\n    return <Splash firebase={firebase} />;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}