{"ast":null,"code":"import React from \"react\";\nimport firebase from \"../firebase/firebase.js\";\nconst db = firebase.firestore();\n\nconst SubmitProblem = (values, mode) => {\n  var now = new Date();\n  var all_cats = [\"algebra\", \"combinatorics\", \"geometry\", \"number_theory\", \"miscellaneous\"];\n  var name_list = [\"Algebra\", \"Combinatorics\", \"Geometry\", \"Number Theory\", \"Miscellaneous\"];\n  var final_cats = [];\n\n  if (mode === \"New\") {\n    db.collection(\"problems\").add({\n      proposer: values.name,\n      difficulty: values.difficulty,\n      statement: values.statement,\n      date_created: now,\n      available: true,\n      algebra: values.algebra,\n      combinatorics: values.combinatorics,\n      geometry: values.geometry,\n      number_theory: values.number_theory,\n      miscellaneous: values.miscellaneous\n    }).then(function (docRef) {// alert(\"Document written with ID: \", docRef.id);\n    }).catch(function (error) {\n      alert(\"Error adding document: \", error);\n    });\n  } else if (mode === \"Edit\") {\n    db.collection(\"problems\").doc(values.id).update({\n      proposer: values.name,\n      difficulty: values.difficulty,\n      statement: values.statement,\n      date_created: now,\n      available: true,\n      combinatorics: values.combinatorics,\n      geometry: values.geometry,\n      number_theory: values.number_theory,\n      miscellaneous: values.miscellaneous\n    }).then(function (docRef) {// alert(\"Document written with ID: \", docRef.id);\n    }).catch(function (error) {\n      alert(\"Error adding document: \", error);\n    });\n  }\n};\n\nexport default SubmitProblem;","map":{"version":3,"sources":["/home/antonio/IceBox/src/dashboard/SubmitProblem.js"],"names":["React","firebase","db","firestore","SubmitProblem","values","mode","now","Date","all_cats","name_list","final_cats","collection","add","proposer","name","difficulty","statement","date_created","available","algebra","combinatorics","geometry","number_theory","miscellaneous","then","docRef","catch","error","alert","doc","id","update"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,MAAMC,EAAE,GAAGD,QAAQ,CAACE,SAAT,EAAX;;AAEA,MAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AACvC,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,MAAIC,QAAQ,GAAG,CAAC,SAAD,EAAY,eAAZ,EAA6B,UAA7B,EAAyC,eAAzC,EAA0D,eAA1D,CAAf;AACA,MAAIC,SAAS,GAAG,CAAC,SAAD,EAAY,eAAZ,EAA6B,UAA7B,EAAyC,eAAzC,EAA0D,eAA1D,CAAhB;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,MAAIL,IAAI,KAAK,KAAb,EAAoB;AACnBJ,IAAAA,EAAE,CAACU,UAAH,CAAc,UAAd,EACEC,GADF,CACM;AACJC,MAAAA,QAAQ,EAAET,MAAM,CAACU,IADb;AAEJC,MAAAA,UAAU,EAAEX,MAAM,CAACW,UAFf;AAGJC,MAAAA,SAAS,EAAEZ,MAAM,CAACY,SAHd;AAIJC,MAAAA,YAAY,EAAEX,GAJV;AAKJY,MAAAA,SAAS,EAAE,IALP;AAMJC,MAAAA,OAAO,EAAEf,MAAM,CAACe,OANZ;AAOJC,MAAAA,aAAa,EAAEhB,MAAM,CAACgB,aAPlB;AAQJC,MAAAA,QAAQ,EAAEjB,MAAM,CAACiB,QARb;AASJC,MAAAA,aAAa,EAAElB,MAAM,CAACkB,aATlB;AAUJC,MAAAA,aAAa,EAAEnB,MAAM,CAACmB;AAVlB,KADN,EAaEC,IAbF,CAaO,UAAUC,MAAV,EAAkB,CACvB;AACA,KAfF,EAgBEC,KAhBF,CAgBQ,UAAUC,KAAV,EAAiB;AACvBC,MAAAA,KAAK,CAAC,yBAAD,EAA4BD,KAA5B,CAAL;AACA,KAlBF;AAmBA,GApBD,MAoBO,IAAItB,IAAI,KAAK,MAAb,EAAqB;AAC3BJ,IAAAA,EAAE,CAACU,UAAH,CAAc,UAAd,EAA0BkB,GAA1B,CAA8BzB,MAAM,CAAC0B,EAArC,EACEC,MADF,CACS;AACPlB,MAAAA,QAAQ,EAAET,MAAM,CAACU,IADV;AAEPC,MAAAA,UAAU,EAAEX,MAAM,CAACW,UAFZ;AAGPC,MAAAA,SAAS,EAAEZ,MAAM,CAACY,SAHX;AAIPC,MAAAA,YAAY,EAAEX,GAJP;AAKPY,MAAAA,SAAS,EAAE,IALJ;AAMPE,MAAAA,aAAa,EAAEhB,MAAM,CAACgB,aANf;AAOPC,MAAAA,QAAQ,EAAEjB,MAAM,CAACiB,QAPV;AAQPC,MAAAA,aAAa,EAAElB,MAAM,CAACkB,aARf;AASPC,MAAAA,aAAa,EAAEnB,MAAM,CAACmB;AATf,KADT,EAYEC,IAZF,CAYO,UAAUC,MAAV,EAAkB,CACvB;AACA,KAdF,EAeEC,KAfF,CAeQ,UAAUC,KAAV,EAAiB;AACvBC,MAAAA,KAAK,CAAC,yBAAD,EAA4BD,KAA5B,CAAL;AACA,KAjBF;AAkBA;AACD,CA7CD;;AA+CA,eAAexB,aAAf","sourcesContent":["import React from \"react\";\nimport firebase from \"../firebase/firebase.js\";\n\nconst db = firebase.firestore();\n\nconst SubmitProblem = (values, mode) => {\n\tvar now = new Date();\n\tvar all_cats = [\"algebra\", \"combinatorics\", \"geometry\", \"number_theory\", \"miscellaneous\"];\n\tvar name_list = [\"Algebra\", \"Combinatorics\", \"Geometry\", \"Number Theory\", \"Miscellaneous\"];\n\tvar final_cats = [];\n\tif (mode === \"New\") {\n\t\tdb.collection(\"problems\")\n\t\t\t.add({\n\t\t\t\tproposer: values.name,\n\t\t\t\tdifficulty: values.difficulty,\n\t\t\t\tstatement: values.statement,\n\t\t\t\tdate_created: now,\n\t\t\t\tavailable: true,\n\t\t\t\talgebra: values.algebra,\n\t\t\t\tcombinatorics: values.combinatorics,\n\t\t\t\tgeometry: values.geometry,\n\t\t\t\tnumber_theory: values.number_theory,\n\t\t\t\tmiscellaneous: values.miscellaneous\n\t\t\t})\n\t\t\t.then(function (docRef) {\n\t\t\t\t// alert(\"Document written with ID: \", docRef.id);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\talert(\"Error adding document: \", error);\n\t\t\t});\n\t} else if (mode === \"Edit\") {\n\t\tdb.collection(\"problems\").doc(values.id)\n\t\t\t.update({\n\t\t\t\tproposer: values.name,\n\t\t\t\tdifficulty: values.difficulty,\n\t\t\t\tstatement: values.statement,\n\t\t\t\tdate_created: now,\n\t\t\t\tavailable: true,\n\t\t\t\tcombinatorics: values.combinatorics,\n\t\t\t\tgeometry: values.geometry,\n\t\t\t\tnumber_theory: values.number_theory,\n\t\t\t\tmiscellaneous: values.miscellaneous\n\t\t\t})\n\t\t\t.then(function (docRef) {\n\t\t\t\t// alert(\"Document written with ID: \", docRef.id);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\talert(\"Error adding document: \", error);\n\t\t\t});\n\t}\n};\n\nexport default SubmitProblem;\n"]},"metadata":{},"sourceType":"module"}