{"ast":null,"code":"var _jsxFileName = \"/home/antonio/IceBox/src/dashboard/ProblemCard.js\";\nimport React, { Component } from 'react';\nimport { Card, CardContent, Typography, CardActions, Box, Chip, Avatar } from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\n\nfunction ConvertDate(date) {\n  var full_date = new Date(date.seconds * 1000);\n  return full_date.toLocaleDateString(\"en-US\");\n}\n\nclass ProblemCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.createChip = category => {\n      var color_list = {\n        A: \"#ad1457\",\n        C: \"#fdd835\",\n        G: \"#00695c\",\n        N: \"#0277bd\",\n        M: \"#512da8\"\n      };\n      return /*#__PURE__*/React.createElement(Chip, {\n        avatar: /*#__PURE__*/React.createElement(Avatar, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }\n        }, category),\n        color: red[500],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 4\n        }\n      });\n    };\n\n    this.generateChips = chip_array => {\n      if (typeof chip_array !== 'undefined') {\n        var chips = [];\n\n        for (var i = 0; i < chip_array.length; ++i) {\n          chips.push(this.createChip(chip_array[i]));\n        }\n\n        return chips;\n      } else {\n        return \" \";\n      }\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        minWidth: 1000,\n        maxWidth: 1000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, this.props.statement), /*#__PURE__*/React.createElement(CardActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"10pt\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      className: \"base_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"left_col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, this.props.proposer, \" on \", ConvertDate(this.props.date_created)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"center_col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, this.generateChips(this.props.category)), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"right_col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, \"Difficulty: \", this.props.difficulty)))))));\n  }\n\n}\n\nexport default ProblemCard;","map":{"version":3,"sources":["/home/antonio/IceBox/src/dashboard/ProblemCard.js"],"names":["React","Component","Card","CardContent","Typography","CardActions","Box","Chip","Avatar","red","ConvertDate","date","full_date","Date","seconds","toLocaleDateString","ProblemCard","createChip","category","color_list","A","C","G","N","M","generateChips","chip_array","chips","i","length","push","render","console","log","props","minWidth","maxWidth","statement","margin","proposer","date_created","difficulty"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Card, CardContent, Typography, CardActions, Box, Chip, Avatar} from '@material-ui/core';\nimport {red} from '@material-ui/core/colors';\n\nfunction ConvertDate (date) {\n\tvar full_date = new Date(date.seconds*1000)\n\treturn full_date.toLocaleDateString(\"en-US\")\n}\n\nclass ProblemCard extends Component {\n\n\tcreateChip = (category) => {\n\t\tvar color_list = {A: \"#ad1457\", C: \"#fdd835\", G: \"#00695c\", N: \"#0277bd\", M: \"#512da8\"}\n\t\treturn (\n\t\t\t<Chip\n\t\t\t\tavatar={<Avatar>{category}</Avatar>}\n\t\t\t\tcolor={red[500]}\n\t\t\t/>\n\t\t\t)\n\t}\n\n\tgenerateChips = (chip_array) => {\n\t\tif (typeof chip_array !== 'undefined') {\n\t\t\tvar chips = []\n\t\t\tfor (var i = 0; i < chip_array.length; ++i){\n\t\t\t\tchips.push(this.createChip(chip_array[i]))\n\t\t\t}\n\t\t\treturn(chips)}\n\t\telse {\n\t\t\treturn (\" \")\n\t\t}\n\t}\n\n\trender () {\n\t\tconsole.log(this.props)\n\t\treturn (\n\t\t\t<Card style={{minWidth: 1000, maxWidth: 1000}}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t{this.props.statement}\n\t\t\t\t</CardContent>\n\t\t\t\t<CardActions>\n\t\t\t\t\t<div style={{margin: \"10pt\"}}>\n\t\t\t\t\t\t<table className=\"base_table\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td className=\"left_col\">\n\t\t\t\t\t\t\t{this.props.proposer} on {ConvertDate(this.props.date_created)}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td className=\"center_col\">{this.generateChips(this.props.category)}</td>\n\t\t\t\t\t\t<td className=\"right_col\">Difficulty: {this.props.difficulty}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t</CardActions>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n\nexport default ProblemCard\n"]},"metadata":{},"sourceType":"module"}