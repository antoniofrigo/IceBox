{"ast":null,"code":"var _jsxFileName = \"/home/antonio/IceBox/src/dashboard/Profile.js\";\nimport React, { useState } from \"react\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Typography, TextField, Button, Input, InputAdornment, IconButton } from \"@material-ui/core\";\nimport { Formik } from \"formik\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport UpdateUser from \"./UpdateProfile.js\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (values.password !== values.confirm) {\n    alert(\"Passwords do not match\");\n    errors.password = \"Passwords do not match\";\n  }\n\n  return errors;\n};\n\nconst Password = props => {\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/React.createElement(Input, {\n    id: props.id,\n    name: props.id,\n    type: show ? \"text\" : \"password\",\n    style: {\n      width: \"200pt\"\n    },\n    value: props.value,\n    placeholder: props.placeholder,\n    onChange: props.handleChange,\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: () => setShow(!show),\n      onMouseDown: () => setShow(!show),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 6\n      }\n    }, show ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 32\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  });\n};\n\nconst Profile = props => {\n  console.log(props.user);\n  return /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      name: props.user.displayName,\n      password: \"\",\n      confirm: \"\"\n    },\n    validate: validate,\n    validateOnChange: false,\n    validateOnBlur: false,\n    onSubmit: (values, {\n      resetForm\n    }) => {\n      UpdateUser(values);\n      props.onClose();\n      resetForm({});\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, fields => /*#__PURE__*/React.createElement(Dialog, {\n    open: props.open,\n    onClose: props.onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: fields.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Profile Information\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 8\n    }\n  }, \"Email: \", props.user.email), typeof props.user.displayName === \"undefined\" ? /*#__PURE__*/React.createElement(TextField, {\n    id: \"name\",\n    value: fields.name,\n    onChange: fields.handleChange,\n    placeholder: \"Set your name! (Only once)\",\n    style: {\n      marginTop: \"3pt\",\n      width: \"200pt\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Name: \", props.user.displayName, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Password, {\n    id: \"password\",\n    placeholder: \"Change password\",\n    value: fields.values.password,\n    handleChange: fields.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Password, {\n    id: \"confirm\",\n    placeholder: \"Confirm your password\",\n    value: fields.values.confirm,\n    handleChange: fields.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 8\n    }\n  }, \" Update Profile\")))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/home/antonio/IceBox/src/dashboard/Profile.js"],"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Typography","TextField","Button","Input","InputAdornment","IconButton","Formik","Visibility","VisibilityOff","UpdateUser","validate","values","errors","password","confirm","alert","Password","props","show","setShow","id","width","value","placeholder","handleChange","Profile","console","log","user","name","displayName","resetForm","onClose","fields","open","handleSubmit","email","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n\tDialog,\n\tDialogTitle,\n\tDialogContent,\n\tDialogActions,\n\tTypography,\n\tTextField,\n\tButton,\n\tInput,\n\tInputAdornment,\n\tIconButton,\n} from \"@material-ui/core\";\nimport { Formik } from \"formik\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport UpdateUser from \"./UpdateProfile.js\";\n\nconst validate = (values) => {\n\tconst errors = {};\n\tif (values.password !== values.confirm) {\n\t\talert(\"Passwords do not match\");\n\t\terrors.password = \"Passwords do not match\";\n\t}\n\treturn errors;\n};\n\nconst Password = (props) => {\n\tconst [show, setShow] = useState(false);\n\treturn (\n\t\t<Input\n\t\t\tid={props.id}\n\t\t\tname={props.id}\n\t\t\ttype={show ? \"text\" : \"password\"}\n\t\t\tstyle={{ width: \"200pt\" }}\n\t\t\tvalue={props.value}\n\t\t\tplaceholder={props.placeholder}\n\t\t\tonChange={props.handleChange}\n\t\t\tendAdornment={\n\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\taria-label=\"toggle password visibility\"\n\t\t\t\t\t\tonClick={() => setShow(!show)}\n\t\t\t\t\t\tonMouseDown={() => setShow(!show)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{show ? <Visibility /> : <VisibilityOff />}\n\t\t\t\t\t</IconButton>\n\t\t\t\t</InputAdornment>\n\t\t\t}\n\t\t/>\n\t);\n};\n\nconst Profile = (props) => {\n\tconsole.log(props.user)\n\treturn (\n\t\t<Formik\n\t\t\tenableReinitialize={true}\n\t\t\tinitialValues={{\n\t\t\t\tname: props.user.displayName,\n\t\t\t\tpassword: \"\",\n\t\t\t\tconfirm: \"\",\n\t\t\t}}\n\t\t\tvalidate={validate}\n\t\t\tvalidateOnChange={false}\n\t\t\tvalidateOnBlur={false}\n\t\t\tonSubmit={(values, { resetForm }) => {\n\t\t\t\tUpdateUser(values)\n\t\t\t\tprops.onClose();\n\t\t\t\tresetForm({});\n\t\t\t}}\n\t\t>\n\t\t\t{(fields) => (\n\t\t\t\t<Dialog open={props.open} onClose={props.onClose}>\n\t\t\t\t\t<form onSubmit={fields.handleSubmit}>\n\t\t\t\t\t\t<DialogTitle>Profile Information</DialogTitle>\n\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t<Typography>Email: {props.user.email}</Typography>\n\t\t\t\t\t\t\t{typeof(props.user.displayName) === \"undefined\" ? (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tvalue={fields.name}\n\t\t\t\t\t\t\t\t\tonChange={fields.handleChange}\n\t\t\t\t\t\t\t\t\tplaceholder=\"Set your name! (Only once)\"\n\t\t\t\t\t\t\t\t\tstyle={{ marginTop: \"3pt\", width: \"200pt\" }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<Typography>Name: {props.user.displayName} </Typography>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<Password\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Change password\"\n\t\t\t\t\t\t\t\tvalue={fields.values.password}\n\t\t\t\t\t\t\t\thandleChange={fields.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t<Password\n\t\t\t\t\t\t\t\tid=\"confirm\"\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm your password\"\n\t\t\t\t\t\t\t\tvalue={fields.values.confirm}\n\t\t\t\t\t\t\t\thandleChange={fields.handleChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t<Button type=\"submit\"> Update Profile</Button>\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t\t</form>\n\t\t\t\t</Dialog>\n\t\t\t)}\n\t\t</Formik>\n\t);\n};\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}