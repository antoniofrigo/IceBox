{"ast":null,"code":"import React from \"react\";\nimport firebase from \"../firebase/firebase.js\";\nconst db = firebase.firestore();\n\nconst SubmitProblem = (values, mode) => {\n  var now = new Date();\n  var all_cats = [\"algebra\", \"combinatorics\", \"geometry\", \"number_theory\", \"miscellaneous\"];\n  var name_list = [\"Algebra\", \"Combinatorics\", \"Geometry\", \"Number Theory\", \"Miscellaneous\"];\n  var final_cats = [];\n\n  for (var i = 0; i < all_cats.length; ++i) {\n    if (values[all_cats[i]] === true) {\n      final_cats.push(name_list[i]);\n    }\n  }\n\n  console.log(mode);\n\n  if (mode === \"New\") {\n    db.collection(\"problems\").add({\n      proposer: values.name,\n      difficulty: values.difficulty,\n      statement: values.statement,\n      date_created: now,\n      category: final_cats,\n      available: true\n    }).then(function (docRef) {// alert(\"Document written with ID: \", docRef.id);\n    }).catch(function (error) {\n      alert(\"Error adding document: \", error);\n    });\n  } else if (mode === \"Edit\") {\n    db.collection(\"problems\").doc(values.id).update({\n      proposer: values.name,\n      difficulty: values.difficulty,\n      statement: values.statement,\n      date_created: now,\n      category: final_cats,\n      available: true\n    }).then(function (docRef) {// alert(\"Document written with ID: \", docRef.id);\n    }).catch(function (error) {\n      alert(\"Error adding document: \", error);\n    });\n  }\n};\n\nexport default SubmitProblem;","map":{"version":3,"sources":["/home/antonio/IceBox/src/dashboard/SubmitProblem.js"],"names":["React","firebase","db","firestore","SubmitProblem","values","mode","now","Date","all_cats","name_list","final_cats","i","length","push","console","log","collection","add","proposer","name","difficulty","statement","date_created","category","available","then","docRef","catch","error","alert","doc","id","update"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,MAAMC,EAAE,GAAGD,QAAQ,CAACE,SAAT,EAAX;;AAEA,MAAMC,aAAa,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AACvC,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,MAAIC,QAAQ,GAAG,CAAC,SAAD,EAAY,eAAZ,EAA6B,UAA7B,EAAyC,eAAzC,EAA0D,eAA1D,CAAf;AACA,MAAIC,SAAS,GAAG,CAAC,SAAD,EAAY,eAAZ,EAA6B,UAA7B,EAAyC,eAAzC,EAA0D,eAA1D,CAAhB;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqC,EAAED,CAAvC,EAA0C;AACzC,QAAIP,MAAM,CAACI,QAAQ,CAACG,CAAD,CAAT,CAAN,KAAwB,IAA5B,EAAkC;AACjCD,MAAAA,UAAU,CAACG,IAAX,CAAgBJ,SAAS,CAACE,CAAD,CAAzB;AACA;AACD;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;;AACA,MAAIA,IAAI,KAAK,KAAb,EAAoB;AACnBJ,IAAAA,EAAE,CAACe,UAAH,CAAc,UAAd,EACEC,GADF,CACM;AACJC,MAAAA,QAAQ,EAAEd,MAAM,CAACe,IADb;AAEJC,MAAAA,UAAU,EAAEhB,MAAM,CAACgB,UAFf;AAGJC,MAAAA,SAAS,EAAEjB,MAAM,CAACiB,SAHd;AAIJC,MAAAA,YAAY,EAAEhB,GAJV;AAKJiB,MAAAA,QAAQ,EAAEb,UALN;AAMJc,MAAAA,SAAS,EAAE;AANP,KADN,EASEC,IATF,CASO,UAAUC,MAAV,EAAkB,CACvB;AACA,KAXF,EAYEC,KAZF,CAYQ,UAAUC,KAAV,EAAiB;AACvBC,MAAAA,KAAK,CAAC,yBAAD,EAA4BD,KAA5B,CAAL;AACA,KAdF;AAeA,GAhBD,MAgBO,IAAIvB,IAAI,KAAK,MAAb,EAAqB;AAC3BJ,IAAAA,EAAE,CAACe,UAAH,CAAc,UAAd,EAA0Bc,GAA1B,CAA8B1B,MAAM,CAAC2B,EAArC,EACEC,MADF,CACS;AACPd,MAAAA,QAAQ,EAAEd,MAAM,CAACe,IADV;AAEPC,MAAAA,UAAU,EAAEhB,MAAM,CAACgB,UAFZ;AAGPC,MAAAA,SAAS,EAAEjB,MAAM,CAACiB,SAHX;AAIPC,MAAAA,YAAY,EAAEhB,GAJP;AAKPiB,MAAAA,QAAQ,EAAEb,UALH;AAMPc,MAAAA,SAAS,EAAE;AANJ,KADT,EASEC,IATF,CASO,UAAUC,MAAV,EAAkB,CACvB;AACA,KAXF,EAYEC,KAZF,CAYQ,UAAUC,KAAV,EAAiB;AACvBC,MAAAA,KAAK,CAAC,yBAAD,EAA4BD,KAA5B,CAAL;AACA,KAdF;AAeA;AACD,CA5CD;;AA8CA,eAAezB,aAAf","sourcesContent":["import React from \"react\";\nimport firebase from \"../firebase/firebase.js\";\n\nconst db = firebase.firestore();\n\nconst SubmitProblem = (values, mode) => {\n\tvar now = new Date();\n\tvar all_cats = [\"algebra\", \"combinatorics\", \"geometry\", \"number_theory\", \"miscellaneous\"];\n\tvar name_list = [\"Algebra\", \"Combinatorics\", \"Geometry\", \"Number Theory\", \"Miscellaneous\"];\n\tvar final_cats = [];\n\tfor (var i = 0; i < all_cats.length; ++i) {\n\t\tif (values[all_cats[i]] === true) {\n\t\t\tfinal_cats.push(name_list[i]);\n\t\t}\n\t}\n\tconsole.log(mode)\n\tif (mode === \"New\") {\n\t\tdb.collection(\"problems\")\n\t\t\t.add({\n\t\t\t\tproposer: values.name,\n\t\t\t\tdifficulty: values.difficulty,\n\t\t\t\tstatement: values.statement,\n\t\t\t\tdate_created: now,\n\t\t\t\tcategory: final_cats,\n\t\t\t\tavailable: true,\n\t\t\t})\n\t\t\t.then(function (docRef) {\n\t\t\t\t// alert(\"Document written with ID: \", docRef.id);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\talert(\"Error adding document: \", error);\n\t\t\t});\n\t} else if (mode === \"Edit\") {\n\t\tdb.collection(\"problems\").doc(values.id)\n\t\t\t.update({\n\t\t\t\tproposer: values.name,\n\t\t\t\tdifficulty: values.difficulty,\n\t\t\t\tstatement: values.statement,\n\t\t\t\tdate_created: now,\n\t\t\t\tcategory: final_cats,\n\t\t\t\tavailable: true,\n\t\t\t})\n\t\t\t.then(function (docRef) {\n\t\t\t\t// alert(\"Document written with ID: \", docRef.id);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\talert(\"Error adding document: \", error);\n\t\t\t});\n\t}\n};\n\nexport default SubmitProblem;\n"]},"metadata":{},"sourceType":"module"}