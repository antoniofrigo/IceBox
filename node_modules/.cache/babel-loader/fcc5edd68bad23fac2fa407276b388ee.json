{"ast":null,"code":"var _jsxFileName = \"/home/antonio/IceBox/src/App.js\";\nimport React, { useState, Component } from \"react\";\nimport firebase from \"./firebase/firebase.js\";\nimport Splash from \"./splash/Splash.js\";\nimport { BrowserRouter as Router, Route, Link, Redirect } from \"react-router-dom\";\nimport \"./css/Splash.css\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => test === true ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }\n}));\n\nclass App extends Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(function (user) {\n      console.log(user);\n\n      if (user) {\n        // User is signed in.\n        alert(\"Test\");\n        var test = false;\n        var displayName = user.displayName;\n        var email = user.email;\n        var emailVerified = user.emailVerified;\n        var isAnonymous = user.isAnonymous;\n        var uid = user.uid;\n        var providerData = user.providerData; // ...\n      } else {// User is signed out.\n          // ...\n        }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Splash, Object.assign({}, props, {\n        firebase: firebase,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 43\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/antonio/IceBox/src/App.js"],"names":["React","useState","Component","firebase","Splash","BrowserRouter","Router","Route","Link","Redirect","PrivateRoute","component","rest","props","test","App","componentDidMount","auth","onAuthStateChanged","user","console","log","alert","displayName","email","emailVerified","isAnonymous","uid","providerData","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,SACIC,aAAa,IAAIC,MADrB,EAEIC,KAFJ,EAGIC,IAHJ,EAIIC,QAJJ,QAKO,kBALP;AAOA,OAAO,kBAAP;;AAIA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAET,SAAb;AAAwB,KAAGU;AAA3B,CAAD,kBACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,EAAA,MAAM,EAAGC,KAAD,IACvBC,IAAI,KAAK,IAAT,gBACI,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,gBAEI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAQA,MAAME,GAAN,SAAkBb,SAAlB,CAA4B;AAE3Bc,EAAAA,iBAAiB,GAAI;AACpBb,IAAAA,QAAQ,CAACc,IAAT,GAAgBC,kBAAhB,CAAmC,UAAUC,IAAV,EAAgB;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAIA,IAAJ,EAAU;AACN;AACAG,QAAAA,KAAK,CAAC,MAAD,CAAL;AACA,YAAIR,IAAI,GAAG,KAAX;AACA,YAAIS,WAAW,GAAGJ,IAAI,CAACI,WAAvB;AACA,YAAIC,KAAK,GAAGL,IAAI,CAACK,KAAjB;AACA,YAAIC,aAAa,GAAGN,IAAI,CAACM,aAAzB;AACA,YAAIC,WAAW,GAAGP,IAAI,CAACO,WAAvB;AACA,YAAIC,GAAG,GAAGR,IAAI,CAACQ,GAAf;AACA,YAAIC,YAAY,GAAGT,IAAI,CAACS,YAAxB,CATM,CAUN;AACH,OAXD,MAWO,CACH;AACA;AACH;AACJ,KAjBD;AAkBA;;AAEDC,EAAAA,MAAM,GAAI;AACN,wBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,MAAM,EAAGhB,KAAD,iBAAW,oBAAC,MAAD,oBAAYA,KAAZ;AAAmB,QAAA,QAAQ,EAAEV,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD;AAKH;;AA7B0B;;AAgC5B,eAAeY,GAAf","sourcesContent":["import React, { useState, Component } from \"react\";\nimport firebase from \"./firebase/firebase.js\";\nimport Splash from \"./splash/Splash.js\";\n\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Redirect,\n} from \"react-router-dom\";\n\nimport \"./css/Splash.css\";\n\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    test === true\n      ? <Component {...props} />\n      : <Redirect to='/login' />\n  )} />\n)\n\nclass App extends Component {\n\n\tcomponentDidMount () {\n\t\tfirebase.auth().onAuthStateChanged(function (user) {\n\t\t    console.log(user);\n\t\t    if (user) {\n\t\t        // User is signed in.\n\t\t        alert(\"Test\")\n\t\t        var test = false\n\t\t        var displayName = user.displayName;\n\t\t        var email = user.email;\n\t\t        var emailVerified = user.emailVerified;\n\t\t        var isAnonymous = user.isAnonymous;\n\t\t        var uid = user.uid;\n\t\t        var providerData = user.providerData;\n\t\t        // ...\n\t\t    } else {\n\t\t        // User is signed out.\n\t\t        // ...\n\t\t    }\n\t\t});\n\t}\n\n\trender () {\n\t    return (\n\t    \t<Router> \n\t    \t\t<Route path=\"/\" render={(props) => <Splash {...props} firebase={firebase} />}/>\n\t    \t</Router>\n\t    \t)\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}