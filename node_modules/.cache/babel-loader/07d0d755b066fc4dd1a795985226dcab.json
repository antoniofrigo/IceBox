{"ast":null,"code":"var _jsxFileName = \"/home/antonio/IceBox/src/dashboard/ProblemCard.js\";\nimport React, { Component, useEffect } from \"react\";\nimport { Card, CardContent, Typography, CardActions, Box, Chip, Divider } from \"@material-ui/core\";\nimport { Menu, AccountCircle, Functions } from \"@material-ui/icons\";\n\nfunction ConvertDate(date) {\n  var full_date = new Date(date.seconds * 1000);\n  return full_date.toLocaleDateString(\"en-US\");\n}\n\nfunction createChip(category) {\n  var color_list = {\n    Algebra: \"#DB4437\",\n    Combinatorics: \"#F4B400\",\n    Geometry: \"#0F9D58\",\n    \"Number Theory\": \"#4285F4\",\n    Miscellaneous: \"#512da8\"\n  };\n  var primary = \"primary\";\n  return /*#__PURE__*/React.createElement(Chip, {\n    key: color_list[category],\n    style: {\n      backgroundColor: color_list[category],\n      color: \"#fff\"\n    },\n    label: category // avatar={<Functions style={{color: \"white\"}}/>}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  });\n}\n\nfunction generateChips(chip_array) {\n  if (typeof chip_array !== \"undefined\") {\n    var chips = [];\n\n    for (var i = 0; i < chip_array.length; ++i) {\n      chips.push(createChip(chip_array[i]));\n    }\n\n    return chips;\n  } else {\n    return \" \";\n  }\n}\n\nconst ProblemCard = props => {\n  window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub]);\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      minWidth: 1000,\n      maxWidth: 1000\n    },\n    key: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"problem_statement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  }, props.statement))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"10pt\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"base_table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"left_col\",\n    key: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, props.proposer, \" on\", \" \", ConvertDate(props.date_created)), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"center_col\",\n    key: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, generateChips(props.category)), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"right_col\",\n    key: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Difficulty: \", props.difficulty)))))));\n};\n\nexport default ProblemCard;","map":{"version":3,"sources":["/home/antonio/IceBox/src/dashboard/ProblemCard.js"],"names":["React","Component","useEffect","Card","CardContent","Typography","CardActions","Box","Chip","Divider","Menu","AccountCircle","Functions","ConvertDate","date","full_date","Date","seconds","toLocaleDateString","createChip","category","color_list","Algebra","Combinatorics","Geometry","Miscellaneous","primary","backgroundColor","color","generateChips","chip_array","chips","i","length","push","ProblemCard","props","window","MathJax","Hub","Queue","minWidth","maxWidth","id","statement","margin","proposer","date_created","difficulty"],"mappings":"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","sourcesContent":["import React, { Component, useEffect } from \"react\";\nimport {\n\tCard,\n\tCardContent,\n\tTypography,\n\tCardActions,\n\tBox,\n\tChip,\n\tDivider,\n} from \"@material-ui/core\";\n\nimport { Menu, AccountCircle, Functions } from \"@material-ui/icons\";\n\nfunction ConvertDate(date) {\n\tvar full_date = new Date(date.seconds * 1000);\n\treturn full_date.toLocaleDateString(\"en-US\");\n}\n\nfunction createChip(category) {\n\tvar color_list = {\n\t\tAlgebra: \"#DB4437\",\n\t\tCombinatorics: \"#F4B400\",\n\t\tGeometry: \"#0F9D58\",\n\t\t\"Number Theory\": \"#4285F4\",\n\t\tMiscellaneous: \"#512da8\",\n\t};\n\tvar primary = \"primary\";\n\treturn (\n\t\t<Chip\n\t\t\tkey={color_list[category]}\n\t\t\tstyle={{ backgroundColor: color_list[category], color: \"#fff\" }}\n\t\t\tlabel={category}\n\t\t\t// avatar={<Functions style={{color: \"white\"}}/>}\n\t\t/>\n\t);\n}\n\nfunction generateChips(chip_array) {\n\tif (typeof chip_array !== \"undefined\") {\n\t\tvar chips = [];\n\t\tfor (var i = 0; i < chip_array.length; ++i) {\n\t\t\tchips.push(createChip(chip_array[i]));\n\t\t}\n\t\treturn chips;\n\t} else {\n\t\treturn \" \";\n\t}\n}\n\nconst ProblemCard = (props) => {\n\twindow.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub]);\n\treturn (\n\t\t<Card style={{ minWidth: 1000, maxWidth: 1000 }} key={props.id}>\n\t\t\t<CardContent>\n\t\t\t\t<div className=\"problem_statement\">\n\t\t\t\t\t<p>{props.statement}</p>\n\t\t\t\t</div>\n\t\t\t</CardContent>\n\t\t\t<Divider />\n\t\t\t<CardActions>\n\t\t\t\t<div style={{ margin: \"10pt\" }}>\n\t\t\t\t\t<table className=\"base_table\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td className=\"left_col\" key=\"left\">\n\t\t\t\t\t\t\t\t\t{props.proposer} on{\" \"}\n\t\t\t\t\t\t\t\t\t{ConvertDate(props.date_created)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"center_col\" key=\"center\">\n\t\t\t\t\t\t\t\t\t{generateChips(props.category)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"right_col\" key=\"right\">\n\t\t\t\t\t\t\t\t\tDifficulty: {props.difficulty}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n};\n\nexport default ProblemCard;\n"]},"metadata":{},"sourceType":"module"}