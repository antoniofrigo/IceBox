{"ast":null,"code":"var _jsxFileName = \"/home/antonio/IceBox/src/dashboard/ProblemCard.js\";\nimport React, { useState } from \"react\";\nimport { Card, CardContent, CardActions, Chip, Divider, IconButton, Snackbar, Tooltip } from \"@material-ui/core\";\nimport copy from \"copy-to-clipboard\";\nimport { FileCopy, Edit } from \"@material-ui/icons\";\nimport EditProblem from \"./Edit.js\";\n\nfunction ConvertDate(date) {\n  var full_date = new Date(date.seconds * 1000);\n  return full_date.toLocaleDateString(\"en-US\");\n}\n\nfunction CreateChip(category) {\n  var color_list = {\n    Algebra: \"#DB4437\",\n    Combinatorics: \"#F4B400\",\n    Geometry: \"#0F9D58\",\n    \"Number Theory\": \"#4285F4\",\n    Miscellaneous: \"#512da8\"\n  };\n  return /*#__PURE__*/React.createElement(Chip, {\n    key: color_list[category],\n    style: {\n      backgroundColor: color_list[category],\n      color: \"#fff\"\n    },\n    label: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }\n  });\n}\n\nconst ProblemCard = props => {\n  const [linkOn, SetLink] = useState(false);\n  const [editOn, SetEdit] = useState(false);\n\n  const handleLink = statement => {\n    copy(statement);\n    SetLink(!linkOn);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      minWidth: 1000,\n      maxWidth: 1000,\n      marginTop: \"10pt\"\n    },\n    key: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"problem_statement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }, props.statement))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"base_table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"left_col\",\n    key: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, props.proposer, \" on \", ConvertDate(props.date_created), typeof props.edited !== \"undefined\" && \"edited on ${ConvertDate(props.edited)}\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }), props.key_code), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"center_col\",\n    key: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, props.algebra === true && CreateChip(\"Algebra\"), props.combinatorics === true && CreateChip(\"Combinatorics\"), props.geometry === true && CreateChip(\"Geometry\"), props.number_theory === true && CreateChip(\"Number Theory\"), props.miscellaneous === true && CreateChip(\"Miscellaneous\")), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"right_col\",\n    key: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Edit the problem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => SetEdit(!editOn),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }\n  }), \" \")), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Copy source to clipboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => handleLink(props.statement),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FileCopy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }\n  }), \" \")), \"Difficulty: \", props.difficulty)))))), /*#__PURE__*/React.createElement(Snackbar, {\n    open: linkOn,\n    autoHideDuration: 2000,\n    onClose: () => SetLink(!linkOn),\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    message: \"Source copied to clipboard!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(EditProblem, {\n    dialog: editOn,\n    info: props,\n    onClick: () => SetEdit(!editOn),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default ProblemCard;","map":{"version":3,"sources":["/home/antonio/IceBox/src/dashboard/ProblemCard.js"],"names":["React","useState","Card","CardContent","CardActions","Chip","Divider","IconButton","Snackbar","Tooltip","copy","FileCopy","Edit","EditProblem","ConvertDate","date","full_date","Date","seconds","toLocaleDateString","CreateChip","category","color_list","Algebra","Combinatorics","Geometry","Miscellaneous","backgroundColor","color","ProblemCard","props","linkOn","SetLink","editOn","SetEdit","handleLink","statement","minWidth","maxWidth","marginTop","id","proposer","date_created","edited","key_code","algebra","combinatorics","geometry","number_theory","miscellaneous","difficulty","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n\tCard,\n\tCardContent,\n\tCardActions,\n\tChip,\n\tDivider,\n\tIconButton,\n\tSnackbar,\n\tTooltip,\n} from \"@material-ui/core\";\nimport copy from \"copy-to-clipboard\";\nimport { FileCopy, Edit } from \"@material-ui/icons\";\nimport EditProblem from \"./Edit.js\";\n\nfunction ConvertDate(date) {\n\tvar full_date = new Date(date.seconds * 1000);\n\treturn full_date.toLocaleDateString(\"en-US\");\n}\n\nfunction CreateChip(category) {\n\tvar color_list = {\n\t\tAlgebra: \"#DB4437\",\n\t\tCombinatorics: \"#F4B400\",\n\t\tGeometry: \"#0F9D58\",\n\t\t\"Number Theory\": \"#4285F4\",\n\t\tMiscellaneous: \"#512da8\",\n\t};\n\treturn (\n\t\t<Chip\n\t\t\tkey={color_list[category]}\n\t\t\tstyle={{ backgroundColor: color_list[category], color: \"#fff\" }}\n\t\t\tlabel={category}\n\t\t/>\n\t);\n}\n\nconst ProblemCard = (props) => {\n\tconst [linkOn, SetLink] = useState(false);\n\tconst [editOn, SetEdit] = useState(false);\n\tconst handleLink = (statement) => {\n\t\tcopy(statement);\n\t\tSetLink(!linkOn);\n\t};\n\n\treturn (\n\t\t<Card style={{ minWidth: 1000, maxWidth: 1000, marginTop: \"10pt\" }} key={props.id}>\n\t\t\t<CardContent>\n\t\t\t\t<div className=\"problem_statement\">\n\t\t\t\t\t<p>{props.statement}</p>\n\t\t\t\t</div>\n\t\t\t</CardContent>\n\t\t\t<Divider />\n\t\t\t<CardActions>\n\t\t\t\t<div>\n\t\t\t\t\t<table className=\"base_table\">\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td className=\"left_col\" key=\"left\">\n\t\t\t\t\t\t\t\t\t{props.proposer} on {ConvertDate(props.date_created)}\n\t\t\t\t\t\t\t\t\t{typeof props.edited !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\t\t\"edited on ${ConvertDate(props.edited)}\"}\n\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t{props.key_code}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"center_col\" key=\"center\">\n\t\t\t\t\t\t\t\t\t{props.algebra === true && CreateChip(\"Algebra\")}\n\t\t\t\t\t\t\t\t\t{props.combinatorics === true && CreateChip(\"Combinatorics\")}\n\t\t\t\t\t\t\t\t\t{props.geometry === true && CreateChip(\"Geometry\")}\n\t\t\t\t\t\t\t\t\t{props.number_theory === true && CreateChip(\"Number Theory\")}\n\t\t\t\t\t\t\t\t\t{props.miscellaneous === true && CreateChip(\"Miscellaneous\")}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"right_col\" key=\"right\">\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Edit the problem\">\n\t\t\t\t\t\t\t\t\t\t<IconButton onClick={() => SetEdit(!editOn)}>\n\t\t\t\t\t\t\t\t\t\t\t<Edit />{\" \"}\n\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Copy source to clipboard\">\n\t\t\t\t\t\t\t\t\t\t<IconButton onClick={() => handleLink(props.statement)}>\n\t\t\t\t\t\t\t\t\t\t\t<FileCopy />{\" \"}\n\t\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\tDifficulty: {props.difficulty}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</CardActions>\n\t\t\t<Snackbar\n\t\t\t\topen={linkOn}\n\t\t\t\tautoHideDuration={2000}\n\t\t\t\tonClose={() => SetLink(!linkOn)}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: \"bottom\",\n\t\t\t\t\thorizontal: \"left\",\n\t\t\t\t}}\n\t\t\t\tmessage=\"Source copied to clipboard!\"\n\t\t\t/>\n\t\t\t<EditProblem dialog={editOn} info={props} onClick={() => SetEdit(!editOn)} />\n\t\t</Card>\n\t);\n};\n\nexport default ProblemCard;\n"]},"metadata":{},"sourceType":"module"}