{"ast":null,"code":"var _jsxFileName = \"/home/antonio/IceBox/src/dashboard/ProblemCard.js\";\nimport React, { Component } from 'react';\nimport { Card, CardContent, Typography, CardActions, Box, Chip, Avatar } from '@material-ui/core';\n\nfunction ConvertDate(date) {\n  var full_date = new Date(date.seconds * 1000);\n  return full_date.toLocaleDateString(\"en-US\");\n}\n\nfunction ProblemCard() {\n  createChip = category => {\n    var color_list = {\n      A: \"#ad1457\",\n      C: \"#fdd835\",\n      G: \"#00695c\",\n      N: \"#0277bd\",\n      M: \"#512da8\"\n    };\n    return /*#__PURE__*/React.createElement(Chip, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, category),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 4\n      }\n    });\n  };\n\n  generateChips = chip_array => {\n    if (typeof chip_array !== 'undefined') {\n      var chips = [];\n\n      for (var i = 0; i < chip_array.length; ++i) {\n        chips.push(this.createChip(chip_array[i]));\n      }\n\n      return chips;\n    } else {\n      return \" \";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      minWidth: 1000,\n      maxWidth: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }, this.props.statement), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"10pt\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"base_table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"left_col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, this.props.proposer, \" on \", ConvertDate(this.props.date_created)), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"center_col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, this.generateChips(this.props.category)), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"right_col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }, \"Difficulty: \", this.props.difficulty)))))));\n}\n\nexport default ProblemCard;","map":{"version":3,"sources":["/home/antonio/IceBox/src/dashboard/ProblemCard.js"],"names":["React","Component","Card","CardContent","Typography","CardActions","Box","Chip","Avatar","ConvertDate","date","full_date","Date","seconds","toLocaleDateString","ProblemCard","createChip","category","color_list","A","C","G","N","M","generateChips","chip_array","chips","i","length","push","minWidth","maxWidth","props","statement","margin","proposer","date_created","difficulty"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,WAAd,EAA2BC,UAA3B,EAAuCC,WAAvC,EAAoDC,GAApD,EAAyDC,IAAzD,EAA+DC,MAA/D,QAA4E,mBAA5E;;AAEA,SAASC,WAAT,CAAsBC,IAAtB,EAA4B;AAC3B,MAAIC,SAAS,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,OAAL,GAAa,IAAtB,CAAhB;AACA,SAAOF,SAAS,CAACG,kBAAV,CAA6B,OAA7B,CAAP;AACA;;AAED,SAASC,WAAT,GAAwB;AAEvBC,EAAAA,UAAU,GAAIC,QAAD,IAAc;AAC1B,QAAIC,UAAU,GAAG;AAACC,MAAAA,CAAC,EAAE,SAAJ;AAAeC,MAAAA,CAAC,EAAE,SAAlB;AAA6BC,MAAAA,CAAC,EAAE,SAAhC;AAA2CC,MAAAA,CAAC,EAAE,SAA9C;AAAyDC,MAAAA,CAAC,EAAE;AAA5D,KAAjB;AACA,wBACC,oBAAC,IAAD;AACC,MAAA,MAAM,eAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASN,QAAT,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAKA,GAPD;;AASAO,EAAAA,aAAa,GAAIC,UAAD,IAAgB;AAC/B,QAAI,OAAOA,UAAP,KAAsB,WAA1B,EAAuC;AACtC,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuC,EAAED,CAAzC,EAA2C;AAC1CD,QAAAA,KAAK,CAACG,IAAN,CAAW,KAAKb,UAAL,CAAgBS,UAAU,CAACE,CAAD,CAA1B,CAAX;AACA;;AACD,aAAOD,KAAP;AAAc,KALf,MAMK;AACJ,aAAQ,GAAR;AACA;AACD,GAVD;;AAYA,sBACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACI,MAAAA,QAAQ,EAAE,IAAX;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,KAAKC,KAAL,CAAWC,SADb,CADD,eAIC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,KAAKF,KAAL,CAAWG,QADb,UAC2B1B,WAAW,CAAC,KAAKuB,KAAL,CAAWI,YAAZ,CADtC,CADA,eAIA;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4B,KAAKZ,aAAL,CAAmB,KAAKQ,KAAL,CAAWf,QAA9B,CAA5B,CAJA,eAKA;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAuC,KAAKe,KAAL,CAAWK,UAAlD,CALA,CADA,CADA,CADD,CADD,CAJD,CADD;AAsBA;;AAED,eAAetB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Card, CardContent, Typography, CardActions, Box, Chip, Avatar} from '@material-ui/core';\n\nfunction ConvertDate (date) {\n\tvar full_date = new Date(date.seconds*1000)\n\treturn full_date.toLocaleDateString(\"en-US\")\n}\n\nfunction ProblemCard()  {\n\n\tcreateChip = (category) => {\n\t\tvar color_list = {A: \"#ad1457\", C: \"#fdd835\", G: \"#00695c\", N: \"#0277bd\", M: \"#512da8\"}\n\t\treturn (\n\t\t\t<Chip\n\t\t\t\tavatar={<Avatar>{category}</Avatar>}\n\t\t\t/>\n\t\t\t)\n\t}\n\n\tgenerateChips = (chip_array) => {\n\t\tif (typeof chip_array !== 'undefined') {\n\t\t\tvar chips = []\n\t\t\tfor (var i = 0; i < chip_array.length; ++i){\n\t\t\t\tchips.push(this.createChip(chip_array[i]))\n\t\t\t}\n\t\t\treturn(chips)}\n\t\telse {\n\t\t\treturn (\" \")\n\t\t}\n\t}\n\n\treturn (\n\t\t<Card style={{minWidth: 1000, maxWidth: 1000}}>\n\t\t\t<CardContent>\n\t\t\t\t{this.props.statement}\n\t\t\t</CardContent>\n\t\t\t<CardActions>\n\t\t\t\t<div style={{margin: \"10pt\"}}>\n\t\t\t\t\t<table className=\"base_table\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t<td className=\"left_col\">\n\t\t\t\t\t\t{this.props.proposer} on {ConvertDate(this.props.date_created)}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t<td className=\"center_col\">{this.generateChips(this.props.category)}</td>\n\t\t\t\t\t<td className=\"right_col\">Difficulty: {this.props.difficulty}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n}\n\nexport default ProblemCard\n"]},"metadata":{},"sourceType":"module"}